# Before building anything, we need to ensure that go modules and generators are set up correctly
before:
  hooks:
    - go mod tidy
    - go generate ./...

# These are the final binaries, that we want to create
builds:
  # This first linux build also contains the defaults used for all other platforms
  - <<:
      binary: dirsrvmetrics
      # The single main entrypoint binary for dirsrvmetrics
      main: ./cmd/dirsrvmetrics
      env:
        # We have no C dependencies
        - CGO_ENABLED=0
      # We want our builds to be reproducible, so we use the commit time as timestamps
      mod_timestamp: '{{ .CommitTimestamp }}'
      ldflags:
        - -s -w
        - -X {{.ModulePath}}/cmd/dirsrvmetrics/main.version={{.Version}}
    id: linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64

# Configure how snapshots are versioned
snapshot:
  name_template: '{{ incpatch .Version }}-dev-{{ .ShortCommit }}'

# Configure what goes into the archives
archives:
  - <<:
      name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
      # Additonally packaged files
      files:
        - LICENSE
        - README*
        - CHANGELOG*
    id: nix
    ids: [ linux ]
    formats: ['tar.gz']

nfpms:
  - file_name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Arch }}'
    homepage: https://github.com/BuJo/dirsrvmetrics
    description: |-
      Project wich collects 389 Directory Server metrics.
    maintainer: Jonathan Buch <jbuch@synyx.de>
    license: MIT
    formats:
      - deb
      - rpm
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/dirsrvmetrics/copyright
        file_info:
          mode: 0644

# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
